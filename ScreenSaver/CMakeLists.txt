project(InspirationalScreenSaver)
include_directories($ENV{MY_GAME_UTILS} )
include_directories($ENV{MY_FILE_UTILS} )
include_directories($ENV{MY_CFG_UTILS} )
include_directories($ENV{MY_STRING_UTILS} )
include_directories($ENV{MY_LOG_UTILS} )
include_directories(${CMAKE_SOURCE_DIR}/3rdParty )

IF(WIN32)
include_directories(${CMAKE_SOURCE_DIR}/include) 
set(SDL2_32_LIB ${CMAKE_SOURCE_DIR}/lib/win/x86/SDL2.lib)
set(SDL2_64_LIB ${CMAKE_SOURCE_DIR}/lib/win/x64/SDL2.lib)
set(SDL2MAIN_32_LIB ${CMAKE_SOURCE_DIR}/lib/win/x86/SDL2main.lib)
set(SDL2MAIN_64_LIB ${CMAKE_SOURCE_DIR}/lib/win/x64/SDL2main.lib)
set(SDL2_TTF_32_LIB ${CMAKE_SOURCE_DIR}/lib/win/x86/SDL2_ttf.lib)
set(SDL2_TTF_64_LIB ${CMAKE_SOURCE_DIR}/lib/win/x64/SDL2_ttf.lib)


set(MY_GAME_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/GameUtils.lib)
set(MY_GAME_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/GameUtils.lib)
set(MY_GAME_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/GameUtils.lib)
set(MY_GAME_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/GameUtils.lib)

set(MY_FILE_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/FileUtils.lib)
set(MY_FILE_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/FileUtils.lib)
set(MY_FILE_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/FileUtils.lib)
set(MY_FILE_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/FileUtils.lib)

set(MY_CFG_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/CFGUtils.lib)
set(MY_CFG_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/CFGUtils.lib)
set(MY_FILE_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/CFGUtils.lib)
set(MY_FILE_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/CFGUtils.lib)

set(MY_STRING_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/StringUtils.lib)
set(MY_STRING_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/StringUtils.lib)
set(MY_STRING_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/StringUtils.lib)
set(MY_STRING_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/StringUtils.lib)

set(MY_LOGGING_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/LogUtils.lib)
set(MY_LOGGING_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/LogUtils.lib)
set(MY_LOGGING_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/LogUtils.lib)
set(MY_LOGGING_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/LogUtils.lib)


ELSE()
find_package(SDL2 REQUIRED)
INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
set(SDL2_64_LIB ${SDL2_LIBRARY})
set(SDL2MAIN_64_LIB ${SDL2_MAIN_LIBRARY} )

#set(SDL2_TTF_32_LIB ${CMAKE_SOURCE_DIR}/lib/lin/x86/SDL2_ttf.a)
#set(SDL2_IMAGE_32_LIB ${CMAKE_SOURCE_DIR}/lib/lin/x86/SDL2_image.a)

set(SDL2_TTF_64_LIB ${SDL2_TTF_LIBRARY})

#notice the "lib" in front of my stuff
set(MY_GAME_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/libGameUtils.a)
set(MY_GAME_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/libGameUtils.a)
set(MY_GAME_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/libGameUtils.a)
set(MY_GAME_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/libGameUtils.a)

set(MY_FILE_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/libFileUtils.a)
set(MY_FILE_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/libFileUtils.a)
set(MY_FILE_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/libFileUtils.a)
set(MY_FILE_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/libFileUtils.a)

set(MY_CFG_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/libCFGUtils.a)
set(MY_CFG_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/libCFGUtils.a)
set(MY_FILE_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/libCFGUtils.a)
set(MY_FILE_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/libCFGUtils.a)

set(MY_STRING_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/libStringUtils.a)
set(MY_STRING_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/libStringUtils.a)
set(MY_STRING_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/libStringUtils.a)
set(MY_STRING_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/libStringUtils.a)

set(MY_LOGGING_LIB_32_D $ENV{MY_X86_DEBUG_LIBS}/libLogUtils.a)
set(MY_LOGGING_LIB_64_D $ENV{MY_X64_DEBUG_LIBS}/libLogUtils.a)
set(MY_LOGGING_LIB_32_R $ENV{MY_X86_RELEASE_LIBS}/libLogUtils.a)
set(MY_LOGGING_LIB_64_R $ENV{MY_X64_RELEASE_LIBS}/libLogUtils.a)


ENDIF()

file(GLOB SOURCES
	${PROJECT_SOURCE_DIR}/*.h
	${PROJECT_SOURCE_DIR}/*.cpp
	${CMAKE_SOURCE_DIR}/3rdParty/*.h 
	${CMAKE_SOURCE_DIR}/3rdParty/*.cpp )
add_executable(ScreenSaver ${SOURCES})


target_link_libraries (ScreenSaver debug     ${SDL2_64_LIB} ${SDL2MAIN_64_LIB} ${SDL2_TTF_64_LIB}  ${MY_STRING_LIB_64_D} ${MY_GAME_LIB_64_D} ${MY_FILE_LIB_64_D} ${MY_CFG_LIB_64_D} ${MY_LOGGING_LIB_64_D} )
#optimized ${SDL2_64_LIB} ${SDL2MAIN_64_LIB} ${SDL2_TTF_64_LIB} ${SDL2_IMAGE_64_LIB} ${MY_STRING_LIB_64_R} ${MY_GAME_LIB_64_R} ${MY_FILE_LIB_64_R} ${MY_CFG_LIB_64_R} )
